/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/products": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          product_name?: parameters["rowFilter.products.product_name"];
          description?: parameters["rowFilter.products.description"];
          price?: parameters["rowFilter.products.price"];
          stock?: parameters["rowFilter.products.stock"];
          image_url?: parameters["rowFilter.products.image_url"];
          created_at?: parameters["rowFilter.products.created_at"];
          updated_at?: parameters["rowFilter.products.updated_at"];
          delete_flg?: parameters["rowFilter.products.delete_flg"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["products"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** products */
          products?: definitions["products"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          product_name?: parameters["rowFilter.products.product_name"];
          description?: parameters["rowFilter.products.description"];
          price?: parameters["rowFilter.products.price"];
          stock?: parameters["rowFilter.products.stock"];
          image_url?: parameters["rowFilter.products.image_url"];
          created_at?: parameters["rowFilter.products.created_at"];
          updated_at?: parameters["rowFilter.products.updated_at"];
          delete_flg?: parameters["rowFilter.products.delete_flg"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          product_name?: parameters["rowFilter.products.product_name"];
          description?: parameters["rowFilter.products.description"];
          price?: parameters["rowFilter.products.price"];
          stock?: parameters["rowFilter.products.stock"];
          image_url?: parameters["rowFilter.products.image_url"];
          created_at?: parameters["rowFilter.products.created_at"];
          updated_at?: parameters["rowFilter.products.updated_at"];
          delete_flg?: parameters["rowFilter.products.delete_flg"];
        };
        body: {
          /** products */
          products?: definitions["products"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          email?: parameters["rowFilter.users.email"];
          password?: parameters["rowFilter.users.password"];
          last_name?: parameters["rowFilter.users.last_name"];
          first_name?: parameters["rowFilter.users.first_name"];
          last_name_kana?: parameters["rowFilter.users.last_name_kana"];
          first_name_kana?: parameters["rowFilter.users.first_name_kana"];
          postal_code?: parameters["rowFilter.users.postal_code"];
          prefecture?: parameters["rowFilter.users.prefecture"];
          city?: parameters["rowFilter.users.city"];
          address1?: parameters["rowFilter.users.address1"];
          address2?: parameters["rowFilter.users.address2"];
          phone_number?: parameters["rowFilter.users.phone_number"];
          created_at?: parameters["rowFilter.users.created_at"];
          updated_at?: parameters["rowFilter.users.updated_at"];
          delete_flg?: parameters["rowFilter.users.delete_flg"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions["users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          email?: parameters["rowFilter.users.email"];
          password?: parameters["rowFilter.users.password"];
          last_name?: parameters["rowFilter.users.last_name"];
          first_name?: parameters["rowFilter.users.first_name"];
          last_name_kana?: parameters["rowFilter.users.last_name_kana"];
          first_name_kana?: parameters["rowFilter.users.first_name_kana"];
          postal_code?: parameters["rowFilter.users.postal_code"];
          prefecture?: parameters["rowFilter.users.prefecture"];
          city?: parameters["rowFilter.users.city"];
          address1?: parameters["rowFilter.users.address1"];
          address2?: parameters["rowFilter.users.address2"];
          phone_number?: parameters["rowFilter.users.phone_number"];
          created_at?: parameters["rowFilter.users.created_at"];
          updated_at?: parameters["rowFilter.users.updated_at"];
          delete_flg?: parameters["rowFilter.users.delete_flg"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          email?: parameters["rowFilter.users.email"];
          password?: parameters["rowFilter.users.password"];
          last_name?: parameters["rowFilter.users.last_name"];
          first_name?: parameters["rowFilter.users.first_name"];
          last_name_kana?: parameters["rowFilter.users.last_name_kana"];
          first_name_kana?: parameters["rowFilter.users.first_name_kana"];
          postal_code?: parameters["rowFilter.users.postal_code"];
          prefecture?: parameters["rowFilter.users.prefecture"];
          city?: parameters["rowFilter.users.city"];
          address1?: parameters["rowFilter.users.address1"];
          address2?: parameters["rowFilter.users.address2"];
          phone_number?: parameters["rowFilter.users.phone_number"];
          created_at?: parameters["rowFilter.users.created_at"];
          updated_at?: parameters["rowFilter.users.updated_at"];
          delete_flg?: parameters["rowFilter.users.delete_flg"];
        };
        body: {
          /** users */
          users?: definitions["users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/carts": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.carts.id"];
          user_id?: parameters["rowFilter.carts.user_id"];
          product_id?: parameters["rowFilter.carts.product_id"];
          quantity?: parameters["rowFilter.carts.quantity"];
          created_at?: parameters["rowFilter.carts.created_at"];
          updated_at?: parameters["rowFilter.carts.updated_at"];
          delete_flg?: parameters["rowFilter.carts.delete_flg"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["carts"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** carts */
          carts?: definitions["carts"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.carts.id"];
          user_id?: parameters["rowFilter.carts.user_id"];
          product_id?: parameters["rowFilter.carts.product_id"];
          quantity?: parameters["rowFilter.carts.quantity"];
          created_at?: parameters["rowFilter.carts.created_at"];
          updated_at?: parameters["rowFilter.carts.updated_at"];
          delete_flg?: parameters["rowFilter.carts.delete_flg"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.carts.id"];
          user_id?: parameters["rowFilter.carts.user_id"];
          product_id?: parameters["rowFilter.carts.product_id"];
          quantity?: parameters["rowFilter.carts.quantity"];
          created_at?: parameters["rowFilter.carts.created_at"];
          updated_at?: parameters["rowFilter.carts.updated_at"];
          delete_flg?: parameters["rowFilter.carts.delete_flg"];
        };
        body: {
          /** carts */
          carts?: definitions["carts"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  products: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    product_name: string;
    /** Format: text */
    description?: string;
    /** Format: integer */
    price: number;
    /** Format: integer */
    stock: number;
    /**
     * Format: character varying
     * @default NULL
     */
    image_url?: string;
    /**
     * Format: timestamp without time zone
     * @default now()
     */
    created_at: string;
    /**
     * Format: timestamp without time zone
     * @default now()
     */
    updated_at: string;
    /**
     * Format: boolean
     * @default false
     */
    delete_flg: boolean;
  };
  users: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    email: string;
    /** Format: character varying */
    password: string;
    /**
     * Format: character varying
     * @default NULL
     */
    last_name?: string;
    /**
     * Format: character varying
     * @default NULL
     */
    first_name?: string;
    /**
     * Format: character varying
     * @default NULL
     */
    last_name_kana?: string;
    /**
     * Format: character varying
     * @default NULL
     */
    first_name_kana?: string;
    /**
     * Format: character varying
     * @default NULL
     */
    postal_code?: string;
    /**
     * Format: character varying
     * @default NULL
     */
    prefecture?: string;
    /**
     * Format: character varying
     * @default NULL
     */
    city?: string;
    /**
     * Format: character varying
     * @default NULL
     */
    address1?: string;
    /**
     * Format: character varying
     * @default NULL
     */
    address2?: string;
    /**
     * Format: character varying
     * @default NULL
     */
    phone_number?: string;
    /**
     * Format: timestamp without time zone
     * @default now()
     */
    created_at: string;
    /**
     * Format: timestamp without time zone
     * @default now()
     */
    updated_at: string;
    /**
     * Format: boolean
     * @default false
     */
    delete_flg: boolean;
  };
  carts: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `products.id`.<fk table='products' column='id'/>
     */
    product_id: number;
    /** Format: integer */
    quantity: number;
    /**
     * Format: timestamp without time zone
     * @default now()
     */
    created_at: string;
    /**
     * Format: timestamp without time zone
     * @default now()
     */
    updated_at: string;
    /**
     * Format: boolean
     * @default false
     */
    delete_flg: boolean;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description products */
  "body.products": definitions["products"];
  /** Format: bigint */
  "rowFilter.products.id": string;
  /** Format: character varying */
  "rowFilter.products.product_name": string;
  /** Format: text */
  "rowFilter.products.description": string;
  /** Format: integer */
  "rowFilter.products.price": string;
  /** Format: integer */
  "rowFilter.products.stock": string;
  /** Format: character varying */
  "rowFilter.products.image_url": string;
  /** Format: timestamp without time zone */
  "rowFilter.products.created_at": string;
  /** Format: timestamp without time zone */
  "rowFilter.products.updated_at": string;
  /** Format: boolean */
  "rowFilter.products.delete_flg": string;
  /** @description users */
  "body.users": definitions["users"];
  /** Format: bigint */
  "rowFilter.users.id": string;
  /** Format: character varying */
  "rowFilter.users.email": string;
  /** Format: character varying */
  "rowFilter.users.password": string;
  /** Format: character varying */
  "rowFilter.users.last_name": string;
  /** Format: character varying */
  "rowFilter.users.first_name": string;
  /** Format: character varying */
  "rowFilter.users.last_name_kana": string;
  /** Format: character varying */
  "rowFilter.users.first_name_kana": string;
  /** Format: character varying */
  "rowFilter.users.postal_code": string;
  /** Format: character varying */
  "rowFilter.users.prefecture": string;
  /** Format: character varying */
  "rowFilter.users.city": string;
  /** Format: character varying */
  "rowFilter.users.address1": string;
  /** Format: character varying */
  "rowFilter.users.address2": string;
  /** Format: character varying */
  "rowFilter.users.phone_number": string;
  /** Format: timestamp without time zone */
  "rowFilter.users.created_at": string;
  /** Format: timestamp without time zone */
  "rowFilter.users.updated_at": string;
  /** Format: boolean */
  "rowFilter.users.delete_flg": string;
  /** @description carts */
  "body.carts": definitions["carts"];
  /** Format: bigint */
  "rowFilter.carts.id": string;
  /** Format: bigint */
  "rowFilter.carts.user_id": string;
  /** Format: bigint */
  "rowFilter.carts.product_id": string;
  /** Format: integer */
  "rowFilter.carts.quantity": string;
  /** Format: timestamp without time zone */
  "rowFilter.carts.created_at": string;
  /** Format: timestamp without time zone */
  "rowFilter.carts.updated_at": string;
  /** Format: boolean */
  "rowFilter.carts.delete_flg": string;
}

export interface operations {}

export interface external {}
